(()=>{async function e(e,o=null,t=null){let n;n=null!==o&&null!==t?await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${o}&lon=${t}&appid=32de6d105d017e55c7030daf2682885c`,{mode:"cors"}):await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&APPID=32de6d105d017e55c7030daf2682885c`,{mode:"cors"});const i=await n.json();if(console.log(i),n.ok){const e=function(e){let o={};return o.coord=e.coord,o.temp=e.main.temp,o.feels_like=e.main.feels_like,o.humidity=e.main.humidity,o.wind=e.wind.speed,o.countryCode=e.sys.country,o.city=e.name,o.logo=e.weather[0].icon,o.mainDescription=e.weather[0].main,o.detailDescription=e.weather[0].description,o.timezone=e.timezone,o}(i);console.log(e),function(e){const o=document.querySelector(".logo img");o.src=`http://openweathermap.org/img/wn/${e.logo}@2x.png`,document.querySelector(".temp").textContent=parseInt(e.temp)-273+"℃",document.querySelector(".description").textContent=`${e.mainDescription} | ${e.detailDescription}`,document.querySelector(".feels-like-temp").textContent=`Feels Like: ${parseInt(e.feels_like)-273}℃`,document.querySelector(".humidity").textContent=`Humidity: ${e.humidity}%`,document.querySelector(".wind").textContent=`Wind: ${e.wind} km/h`,document.querySelector(".city").textContent=`${e.city}, ${e.countryCode}`,console.log(o)}(e)}else console.log(i.cod),console.log(i.message)}let o=0,t=0;navigator.geolocation?navigator.geolocation.getCurrentPosition((function(e){console.log(e),o=e.coords.latitude,t=e.coords.longitude,console.log(o),console.log(t)})):alert("Geolocation is not supported by this browser."),console.log(o),console.log(t),e(null,o,t),console.log("hi there"),document.querySelector("form").onsubmit=o=>{o.preventDefault(),e(document.querySelector("form input").value)}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiTUE0REFBLGVBQWVDLEVBQWVDLEVBQVVDLEVBQUksS0FBTUMsRUFBSSxNQUNsRCxJQUFJQyxFQUVBQSxFQURRLE9BQVJGLEdBQXdCLE9BQVJDLFFBQ0NFLE1BQU0sdURBQXVESCxTQUFXQywyQ0FBOEMsQ0FBRUcsS0FBTSxlQUc5SEQsTUFBTSxxREFBcURKLDJDQUFtRCxDQUFFSyxLQUFNLFNBRTNJLE1BQU1DLFFBQWFILEVBQVNJLE9BRTVCLEdBREFDLFFBQVFDLElBQUlILEdBQ1JILEVBQVNPLEdBQUksQ0FDYixNQUFNQyxFQTVCZCxTQUFxQkMsR0FDakIsSUFBSUMsRUFBaUIsQ0FBQyxFQVl0QixPQVhBQSxFQUFlQyxNQUFRRixFQUFjRSxNQUNyQ0QsRUFBZUUsS0FBT0gsRUFBY0ksS0FBS0QsS0FDekNGLEVBQWVJLFdBQWFMLEVBQWNJLEtBQUtDLFdBQy9DSixFQUFlSyxTQUFXTixFQUFjSSxLQUFLRSxTQUM3Q0wsRUFBZU0sS0FBT1AsRUFBY08sS0FBS0MsTUFDekNQLEVBQWVRLFlBQWNULEVBQWNVLElBQUlDLFFBQy9DVixFQUFlVyxLQUFPWixFQUFjYSxLQUNwQ1osRUFBZWEsS0FBT2QsRUFBY2UsUUFBUSxHQUFHQyxLQUMvQ2YsRUFBZWdCLGdCQUFrQmpCLEVBQWNlLFFBQVEsR0FBR1gsS0FDMURILEVBQWVpQixrQkFBb0JsQixFQUFjZSxRQUFRLEdBQUdJLFlBQzVEbEIsRUFBZW1CLFNBQVdwQixFQUFjb0IsU0FDakNuQixDQUNYLENBYzhCb0IsQ0FBWTNCLEdBQ2xDRSxRQUFRQyxJQUFJRSxHQXZEcEIsU0FBNEJMLEdBRXhCLE1BQU1vQixFQUFPUSxTQUFTQyxjQUFjLGFBQ3BDVCxFQUFLVSxJQUFNLG9DQUFvQzlCLEVBQUtvQixjQUV2Q1EsU0FBU0MsY0FBYyxTQUMvQkUsWUFBaUJDLFNBQVNoQyxFQUFLUyxNQUFRLElBQXpCLElBRUNtQixTQUFTQyxjQUFjLGdCQUMvQkUsWUFBYyxHQUFHL0IsRUFBS3VCLHFCQUFxQnZCLEVBQUt3QixvQkFFMUNJLFNBQVNDLGNBQWMsb0JBQy9CRSxZQUFjLGVBQWVDLFNBQVNoQyxFQUFLVyxZQUFjLE9BRWxEaUIsU0FBU0MsY0FBYyxhQUMvQkUsWUFBYyxhQUFhL0IsRUFBS1ksWUFFNUJnQixTQUFTQyxjQUFjLFNBQy9CRSxZQUFjLFNBQVMvQixFQUFLYSxZQUVwQmUsU0FBU0MsY0FBYyxTQUMvQkUsWUFBYyxHQUFHL0IsRUFBS2tCLFNBQVNsQixFQUFLZSxjQUN6Q2IsUUFBUUMsSUFBSWlCLEVBQ2hCLENBaUNRYSxDQUFtQjVCLEVBQ3ZCLE1BRUlILFFBQVFDLElBQUlILEVBQUtrQyxLQUNqQmhDLFFBQVFDLElBQUlILEVBQUttQyxRQUV6QixDQUlBLElBQUlDLEVBQU8sRUFDUEMsRUFBUSxFQW5GSkMsVUFBVUMsWUFDVkQsVUFBVUMsWUFBWUMsb0JBTTlCLFNBQXNCQyxHQUNsQnZDLFFBQVFDLElBQUlzQyxHQUNaTCxFQUFPSyxFQUFTQyxPQUFPQyxTQUN2Qk4sRUFBUUksRUFBU0MsT0FBT0UsVUFDeEIxQyxRQUFRQyxJQUFJaUMsR0FDWmxDLFFBQVFDLElBQUlrQyxFQUNoQixJQVZRUSxNQUFNLGlEQWtGZDNDLFFBQVFDLElBQUlpQyxHQUNabEMsUUFBUUMsSUFBSWtDLEdBQ1o1QyxFQUFlLEtBQU0yQyxFQUFNQyxHQUMzQm5DLFFBQVFDLElBQUksWUFFQ3lCLFNBQVNDLGNBQWMsUUFDL0JpQixTQUFZQyxJQUNiQSxFQUFFQyxpQkFFRnZELEVBRGNtQyxTQUFTQyxjQUFjLGNBQ2hCb0IsTUFBTSxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2V0TG9jYXRpb24oKSB7XG4gICAgaWYgKG5hdmlnYXRvci5nZW9sb2NhdGlvbikge1xuICAgICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKHNob3dQb3NpdGlvbik7XG4gICAgfSBlbHNlIHsgXG4gICAgICAgIGFsZXJ0KFwiR2VvbG9jYXRpb24gaXMgbm90IHN1cHBvcnRlZCBieSB0aGlzIGJyb3dzZXIuXCIpO1xuICAgIH1cbn1cbiAgXG5mdW5jdGlvbiBzaG93UG9zaXRpb24ocG9zaXRpb24pIHtcbiAgICBjb25zb2xlLmxvZyhwb3NpdGlvbik7XG4gICAgbGF0aSA9IHBvc2l0aW9uLmNvb3Jkcy5sYXRpdHVkZTtcbiAgICBsb25naSA9IHBvc2l0aW9uLmNvb3Jkcy5sb25naXR1ZGU7XG4gICAgY29uc29sZS5sb2cobGF0aSk7XG4gICAgY29uc29sZS5sb2cobG9uZ2kpO1xufVxuXG5cbmZ1bmN0aW9uIGRpc3BsYXlXZWF0aGVyRGF0YShkYXRhKSB7XG5cbiAgICBjb25zdCBsb2dvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxvZ28gaW1nJyk7XG4gICAgbG9nby5zcmMgPSBgaHR0cDovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvd24vJHtkYXRhLmxvZ299QDJ4LnBuZ2A7XG5cbiAgICBjb25zdCB0ZW1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRlbXAnKTtcbiAgICB0ZW1wLnRleHRDb250ZW50ID0gYCR7cGFyc2VJbnQoZGF0YS50ZW1wKSAtIDI3M33ihINgO1xuXG4gICAgY29uc3QgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZGVzY3JpcHRpb24nKTtcbiAgICBkZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IGAke2RhdGEubWFpbkRlc2NyaXB0aW9ufSB8ICR7ZGF0YS5kZXRhaWxEZXNjcmlwdGlvbn1gO1xuXG4gICAgY29uc3QgZmVlbHNMaWtlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZlZWxzLWxpa2UtdGVtcCcpO1xuICAgIGZlZWxzTGlrZS50ZXh0Q29udGVudCA9IGBGZWVscyBMaWtlOiAke3BhcnNlSW50KGRhdGEuZmVlbHNfbGlrZSkgLSAyNzN94oSDYDtcblxuICAgIGNvbnN0IGh1bWlkaXR5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmh1bWlkaXR5Jyk7XG4gICAgaHVtaWRpdHkudGV4dENvbnRlbnQgPSBgSHVtaWRpdHk6ICR7ZGF0YS5odW1pZGl0eX0lYDtcblxuICAgIGNvbnN0IHdpbmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2luZCcpO1xuICAgIHdpbmQudGV4dENvbnRlbnQgPSBgV2luZDogJHtkYXRhLndpbmR9IGttL2hgO1xuXG4gICAgY29uc3QgY2l0eSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jaXR5Jyk7XG4gICAgY2l0eS50ZXh0Q29udGVudCA9IGAke2RhdGEuY2l0eX0sICR7ZGF0YS5jb3VudHJ5Q29kZX1gO1xuICAgIGNvbnNvbGUubG9nKGxvZ28pO1xufVxuXG5cbmZ1bmN0aW9uIGV4dHJhY3REYXRhKHdlYXRoZXJPYmplY3QpIHtcbiAgICBsZXQgbmVjZXNzYXJ5RGF0YXMgPSB7fTtcbiAgICBuZWNlc3NhcnlEYXRhcy5jb29yZCA9IHdlYXRoZXJPYmplY3QuY29vcmQ7XG4gICAgbmVjZXNzYXJ5RGF0YXMudGVtcCA9IHdlYXRoZXJPYmplY3QubWFpbi50ZW1wO1xuICAgIG5lY2Vzc2FyeURhdGFzLmZlZWxzX2xpa2UgPSB3ZWF0aGVyT2JqZWN0Lm1haW4uZmVlbHNfbGlrZTtcbiAgICBuZWNlc3NhcnlEYXRhcy5odW1pZGl0eSA9IHdlYXRoZXJPYmplY3QubWFpbi5odW1pZGl0eTtcbiAgICBuZWNlc3NhcnlEYXRhcy53aW5kID0gd2VhdGhlck9iamVjdC53aW5kLnNwZWVkO1xuICAgIG5lY2Vzc2FyeURhdGFzLmNvdW50cnlDb2RlID0gd2VhdGhlck9iamVjdC5zeXMuY291bnRyeTtcbiAgICBuZWNlc3NhcnlEYXRhcy5jaXR5ID0gd2VhdGhlck9iamVjdC5uYW1lO1xuICAgIG5lY2Vzc2FyeURhdGFzLmxvZ28gPSB3ZWF0aGVyT2JqZWN0LndlYXRoZXJbMF0uaWNvbjtcbiAgICBuZWNlc3NhcnlEYXRhcy5tYWluRGVzY3JpcHRpb24gPSB3ZWF0aGVyT2JqZWN0LndlYXRoZXJbMF0ubWFpbjtcbiAgICBuZWNlc3NhcnlEYXRhcy5kZXRhaWxEZXNjcmlwdGlvbiA9IHdlYXRoZXJPYmplY3Qud2VhdGhlclswXS5kZXNjcmlwdGlvbjtcbiAgICBuZWNlc3NhcnlEYXRhcy50aW1lem9uZSA9IHdlYXRoZXJPYmplY3QudGltZXpvbmU7XG4gICAgcmV0dXJuIG5lY2Vzc2FyeURhdGFzO1xufVxuXG5cbmFzeW5jIGZ1bmN0aW9uIGdldFdlYXRoZXJEYXRhKGxvY2F0aW9uLCBsYXQ9bnVsbCwgbG9uPW51bGwpIHtcbiAgICBsZXQgcmVzcG9uc2U7XG4gICAgaWYgKGxhdCAhPT0gbnVsbCAmJiBsb24gIT09IG51bGwpIHtcbiAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/bGF0PSR7bGF0fSZsb249JHtsb259JmFwcGlkPTMyZGU2ZDEwNWQwMTdlNTVjNzAzMGRhZjI2ODI4ODVjYCwgeyBtb2RlOiBcImNvcnNcIn0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT0ke2xvY2F0aW9ufSZBUFBJRD0zMmRlNmQxMDVkMDE3ZTU1YzcwMzBkYWYyNjgyODg1Y2AsIHsgbW9kZTogXCJjb3JzXCJ9KTtcbiAgICB9XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgZXh0cmFjdGVkRGF0YSA9IGV4dHJhY3REYXRhKGRhdGEpO1xuICAgICAgICBjb25zb2xlLmxvZyhleHRyYWN0ZWREYXRhKTtcbiAgICAgICAgZGlzcGxheVdlYXRoZXJEYXRhKGV4dHJhY3RlZERhdGEpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coZGF0YS5jb2QpXG4gICAgICAgIGNvbnNvbGUubG9nKGRhdGEubWVzc2FnZSlcbiAgICB9XG59XG5cblxuLy8gTUFJTlxubGV0IGxhdGkgPSAwO1xubGV0IGxvbmdpID0gMDtcbmdldExvY2F0aW9uKCk7XG5jb25zb2xlLmxvZyhsYXRpKTtcbmNvbnNvbGUubG9nKGxvbmdpKTtcbmdldFdlYXRoZXJEYXRhKG51bGwsIGxhdGksIGxvbmdpKTtcbmNvbnNvbGUubG9nKCdoaSB0aGVyZScpO1xuXG5jb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZm9ybScpO1xuZm9ybS5vbnN1Ym1pdCA9IChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZm9ybSBpbnB1dCcpO1xuICAgIGdldFdlYXRoZXJEYXRhKGlucHV0LnZhbHVlKTtcbn07Il0sIm5hbWVzIjpbImFzeW5jIiwiZ2V0V2VhdGhlckRhdGEiLCJsb2NhdGlvbiIsImxhdCIsImxvbiIsInJlc3BvbnNlIiwiZmV0Y2giLCJtb2RlIiwiZGF0YSIsImpzb24iLCJjb25zb2xlIiwibG9nIiwib2siLCJleHRyYWN0ZWREYXRhIiwid2VhdGhlck9iamVjdCIsIm5lY2Vzc2FyeURhdGFzIiwiY29vcmQiLCJ0ZW1wIiwibWFpbiIsImZlZWxzX2xpa2UiLCJodW1pZGl0eSIsIndpbmQiLCJzcGVlZCIsImNvdW50cnlDb2RlIiwic3lzIiwiY291bnRyeSIsImNpdHkiLCJuYW1lIiwibG9nbyIsIndlYXRoZXIiLCJpY29uIiwibWFpbkRlc2NyaXB0aW9uIiwiZGV0YWlsRGVzY3JpcHRpb24iLCJkZXNjcmlwdGlvbiIsInRpbWV6b25lIiwiZXh0cmFjdERhdGEiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzcmMiLCJ0ZXh0Q29udGVudCIsInBhcnNlSW50IiwiZGlzcGxheVdlYXRoZXJEYXRhIiwiY29kIiwibWVzc2FnZSIsImxhdGkiLCJsb25naSIsIm5hdmlnYXRvciIsImdlb2xvY2F0aW9uIiwiZ2V0Q3VycmVudFBvc2l0aW9uIiwicG9zaXRpb24iLCJjb29yZHMiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsImFsZXJ0Iiwib25zdWJtaXQiLCJlIiwicHJldmVudERlZmF1bHQiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=